version: "3.8"

services:
  # Main Trading Bot Dashboard
  solana-trading-bot:
    build: .
    container_name: solana-trading-bot
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CLEAR_DATA_ON_STARTUP=false
    volumes:
      # Persist user data (optional - remove for ephemeral sessions)
      - ./user_data:/app/user_data
      # Mount config files if using .env mode
      - ./.env:/app/.env:ro
      - ./.env.bot2:/app/.env.bot2:ro
      - ./.env.bot3:/app/.env.bot3:ro
    restart: unless-stopped
    networks:
      - solana-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/api/status', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Reverse Proxy with SSL (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: solana-bot-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - solana-trading-bot
  #   networks:
  #     - solana-network
  #   restart: unless-stopped

  # Optional: Monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: solana-bot-monitoring
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #   networks:
  #     - solana-network
  #   restart: unless-stopped

networks:
  solana-network:
    driver: bridge

volumes:
  user_data:
    driver: local
